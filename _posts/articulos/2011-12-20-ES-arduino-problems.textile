---
language: es
layout: blog-articulo
category: articulos
title: "Arduino (0022) problems coming from String and Serial libraries"
permalink: /blog/2011/12/arduino-problems/
url-otro-idioma: /en/blog/2011/12/arduino-problems/
slug: arduino-problems

auto-traduccion: yes
subtitulo: Like Box Project
imagen: farm7.staticflickr.com/6056/7002793727_908ff2bae3
autores: 
 - magda-sanchez

categorias:
 - colaborativa

relacionados:

enlaces:
- { type: externo, title: Original source of this post at Magda's Blog, url: http://www.magdasanchez.es/2011/12/arduino-0022-problems-coming-from-string-and-serial-libraries/ }

---


When you start working with Arduino, you can find all the official libraries available at "Arduino home page":http://arduino.cc/en/Tutorial/HomePage, the String and Serial are some of them.

In my last project (see my past posts "Like Box":http://www.magdasanchez.es/2011/12/likebox/ or "Boards are ready":http://www.magdasanchez.es/2011/09/boards-are-ready-to-be-boxed/), I was using Arduino alpha version 0022. At the beginning everything was ok but when I started doing more complex stuff such as: _concatenating strings, reusing string objects, assigning one string to another and overall leaving my app working for few hours..._then serious memory leaks and corruption problems were happening. Programming with Arduino processing is particularly sensible to memory problems mainly because the loop() function is continuously running, so string objects are continuously being reused, resized, etc..

In order to have a more precise control of memory usage in my Arduino application I decided to use classic C language _dynamic char arrays_. For a programmer with extensive background in C language this was the shortest solution. Searching on google I realized I was not the only one having this problem so hopefully next Arduino releases fix this bug.

Another problem that I experienced while running my Arduino application is that the execution stopped at some point for no reason. After a while I realized that doing many Serial.println(..) was causing it, so I removed some and everything was working again. I suppose having a lot of debugging information going through the serial port could be interfering with the rest of operations.

Tips when using Arduino Libraries:
 1) Better do not use the String Library, implement dynamic char arrays instead.
 2) Limited Use of Serial.println(..).

And one last tip for debugging your Arduino Application: measure how much memory is free with the following code "Free Memory!":http://www.arduino.cc/playground/Code/AvailableMemory.